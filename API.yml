---
swagger: "2.0"
info:
  description: Api Documentation
  version: "1.0"
  title: Api Documentation
host: localhost:8080
basePath: "/"
tags:
  - name: activity-controller
    description: Activity Controller
  - name: basic-error-controller
    description: Basic Error Controller
  - name: chat-controller
    description: Chat Controller
  - name: user-controller
    description: User Controller
paths:
  "/api/v1/activities":
    get:
      tags:
        - activity-controller
      summary: getActivities
      operationId: getActivitiesUsingGET
      produces:
        - "*/*"
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/ActivityDTO"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    post:
      tags:
        - activity-controller
      summary: createActivity
      operationId: createActivityUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - in: body
          name: activity
          description: activity
          required: true
          schema:
            "$ref": "#/definitions/ActivityRegistrationDTO"
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/ActivityDTO"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/api/v1/activities/{activity_id}":
    get:
      tags:
        - activity-controller
      summary: getActivity
      operationId: getActivityUsingGET
      produces:
        - "*/*"
      parameters:
        - name: activity_id
          in: path
          description: activity_id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/ActivityDTO"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    put:
      tags:
        - activity-controller
      summary: editActivity
      operationId: editActivityUsingPUT
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: activity_id
          in: path
          description: activity_id
          required: true
          type: integer
          format: int64
        - in: body
          name: activityRegDTO
          description: activityRegDTO
          required: true
          schema:
            "$ref": "#/definitions/ActivityRegistrationDTO"
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/ActivityDTO"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    delete:
      tags:
        - activity-controller
      summary: deleteActivity
      operationId: deleteActivityUsingDELETE
      produces:
        - "*/*"
      parameters:
        - name: activity_id
          in: path
          description: activity_id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            type: string
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  "/api/v1/activities/{activity_id}/chat":
    get:
      tags:
        - activity-controller
      summary: getActivityChat
      operationId: getActivityChatUsingGET
      produces:
        - "*/*"
      parameters:
        - name: activity_id
          in: path
          description: activity_id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/Chat"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/api/v1/activities/{activity_id}/users/{user_id}":
    post:
      tags:
        - activity-controller
      summary: addUserToActivity
      operationId: addUserToActivityUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: activity_id
          in: path
          description: activity_id
          required: true
          type: integer
          format: int64
        - name: user_id
          in: path
          description: user_id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/UserDTO"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/api/v1/chats":
    get:
      tags:
        - chat-controller
      summary: getChats
      operationId: getChatsUsingGET
      produces:
        - "*/*"
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/Chat"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    post:
      tags:
        - chat-controller
      summary: createChat
      operationId: createChatUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - in: body
          name: chat
          description: chat
          required: true
          schema:
            "$ref": "#/definitions/Chat"
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/Chat"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/api/v1/chats/{chat_id}":
    get:
      tags:
        - chat-controller
      summary: getChat
      operationId: getChatUsingGET
      produces:
        - "*/*"
      parameters:
        - name: chat_id
          in: path
          description: chat_id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/Chat"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    put:
      tags:
        - chat-controller
      summary: updateChat
      operationId: updateChatUsingPUT
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - in: body
          name: chat
          description: chat
          required: true
          schema:
            "$ref": "#/definitions/Chat"
        - name: chat_id
          in: path
          description: chat_id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/Chat"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    delete:
      tags:
        - chat-controller
      summary: deleteChat
      operationId: deleteChatUsingDELETE
      produces:
        - "*/*"
      parameters:
        - name: chat_id
          in: path
          description: chat_id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            type: string
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  "/api/v1/chats/{chat_id}/messages":
    get:
      tags:
        - chat-controller
      summary: getMessages
      operationId: getMessagesUsingGET
      produces:
        - "*/*"
      parameters:
        - name: chat_id
          in: path
          description: chat_id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            type: array
            uniqueItems: true
            items:
              "$ref": "#/definitions/MessageRes"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    post:
      tags:
        - chat-controller
      summary: createMessage
      operationId: createMessageUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: chat_id
          in: path
          description: chat_id
          required: true
          type: integer
          format: int64
        - in: body
          name: message
          description: message
          required: true
          schema:
            "$ref": "#/definitions/MessageReq"
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/MessageRes"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/api/v1/users":
    post:
      tags:
        - user-controller
      summary: createUser
      operationId: createUserUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - in: body
          name: user
          description: user
          required: true
          schema:
            "$ref": "#/definitions/UserWithPasswordDTO"
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/UserRegistrationCallbackDTO"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/api/v1/users/{user_id}":
    get:
      tags:
        - user-controller
      summary: getUser
      operationId: getUserUsingGET
      produces:
        - "*/*"
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/UserDTO"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    post:
      tags:
        - user-controller
      summary: editUser
      operationId: editUserUsingPOST
      consumes:
        - application/json
      produces:
        - "*/*"
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          type: integer
          format: int64
        - in: body
          name: userEditDTO
          description: userEditDTO
          required: true
          schema:
            "$ref": "#/definitions/UserEditDTO"
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/UserDTO"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    delete:
      tags:
        - user-controller
      summary: deleteUser
      operationId: deleteUserUsingDELETE
      produces:
        - "*/*"
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            type: string
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  "/api/v1/users/{user_id}/activities":
    get:
      tags:
        - user-controller
      summary: getUserActivities
      operationId: getUserActivitiesUsingGET
      produces:
        - "*/*"
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            type: array
            uniqueItems: true
            items:
              "$ref": "#/definitions/Activity"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  "/api/v1/users/{user_id}/activities/{activity_id}":
    delete:
      tags:
        - user-controller
      summary: removeUserFromActivity
      operationId: removeUserFromActivityUsingDELETE
      produces:
        - "*/*"
      parameters:
        - name: activity_id
          in: path
          description: activity_id
          required: true
          type: integer
          format: int64
        - name: user_id
          in: path
          description: user_id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            type: string
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  "/error":
    get:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingGET
      produces:
        - text/html
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/ModelAndView"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    head:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingHEAD
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/ModelAndView"
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    post:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPOST
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/ModelAndView"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    put:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPUT
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/ModelAndView"
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    delete:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingDELETE
      produces:
        - text/html
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/ModelAndView"
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    options:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingOPTIONS
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/ModelAndView"
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    patch:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPATCH
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        "200":
          description: OK
          schema:
            "$ref": "#/definitions/ModelAndView"
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
definitions:
  Activity:
    type: object
    properties:
      activityId:
        type: integer
        format: int64
      activityPicture:
        "$ref": "#/definitions/BlobRes"
      city:
        type: string
      description:
        type: string
      difficulty:
        type: string
        enum:
          - EASY
          - HARD
          - MEDIUM
      durationMinutes:
        type: integer
        format: int32
      equipment:
        type: string
      latitude:
        type: number
        format: double
      longitude:
        type: number
        format: double
      maxParticipants:
        type: integer
        format: int32
      place:
        type: string
      privateActivity:
        type: boolean
      startTime:
        type: string
        format: date-time
      title:
        type: string
      type:
        type: string
    title: Activity
  ActivityDTO:
    type: object
    properties:
      activityId:
        type: integer
        format: int64
      activityPicture:
        "$ref": "#/definitions/BlobRes"
      city:
        type: string
      description:
        type: string
      difficulty:
        type: string
        enum:
          - EASY
          - HARD
          - MEDIUM
      durationMinutes:
        type: integer
        format: int32
      equipment:
        type: string
      latitude:
        type: number
        format: double
      longitude:
        type: number
        format: double
      maxParticipants:
        type: integer
        format: int32
      organizerId:
        type: integer
        format: int64
      place:
        type: string
      privateActivity:
        type: boolean
      startTime:
        type: string
        format: date-time
      title:
        type: string
      type:
        type: string
    title: ActivityDTO
  ActivityRegistrationDTO:
    type: object
    properties:
      activityPicture:
        "$ref": "#/definitions/BlobReq"
      city:
        type: string
      description:
        type: string
      difficulty:
        type: string
        enum:
          - EASY
          - HARD
          - MEDIUM
      durationMinutes:
        type: integer
        format: int32
      equipment:
        type: string
      latitude:
        type: number
        format: double
      longitude:
        type: number
        format: double
      maxParticipants:
        type: integer
        format: int32
      place:
        type: string
      privateActivity:
        type: boolean
      startTime:
        type: string
        format: date-time
      title:
        type: string
      type:
        type: string
    title: ActivityRegistrationDTO
  ActivityReq:
    type: object
    properties:
      activityId:
        type: integer
        format: int64
      activityPicture:
        "$ref": "#/definitions/BlobReq"
      city:
        type: string
      description:
        type: string
      difficulty:
        type: string
        enum:
          - EASY
          - HARD
          - MEDIUM
      durationMinutes:
        type: integer
        format: int32
      equipment:
        type: string
      latitude:
        type: number
        format: double
      longitude:
        type: number
        format: double
      maxParticipants:
        type: integer
        format: int32
      place:
        type: string
      privateActivity:
        type: boolean
      startTime:
        type: string
        format: date-time
      title:
        type: string
      type:
        type: string
    title: ActivityReq
  ActivityRes:
    type: object
    properties:
      activityId:
        type: integer
        format: int64
      activityPicture:
        "$ref": "#/definitions/BlobRes"
      city:
        type: string
      description:
        type: string
      difficulty:
        type: string
        enum:
          - EASY
          - HARD
          - MEDIUM
      durationMinutes:
        type: integer
        format: int32
      equipment:
        type: string
      latitude:
        type: number
        format: double
      longitude:
        type: number
        format: double
      maxParticipants:
        type: integer
        format: int32
      place:
        type: string
      privateActivity:
        type: boolean
      startTime:
        type: string
        format: date-time
      title:
        type: string
      type:
        type: string
    title: ActivityRes
  BlobReq:
    type: object
    properties:
      binaryStream:
        type: integer
        format: int64
    title: BlobReq
  BlobRes:
    type: object
    properties:
      binaryStream:
        "$ref": "#/definitions/InputStream"
    title: BlobRes
  Chat:
    type: object
    properties:
      chatId:
        type: integer
        format: int64
      messages:
        type: array
        uniqueItems: true
        items:
          "$ref": "#/definitions/MessageReq"
    title: Chat
  InputStream:
    type: object
    title: InputStream
  Message:
    type: object
    properties:
      chat:
        "$ref": "#/definitions/Chat"
      message:
        type: string
      messageId:
        type: integer
        format: int64
      timeSent:
        type: string
        format: date-time
      user:
        "$ref": "#/definitions/User"
    title: Message
  MessageReq:
    type: object
    properties:
      chat:
        "$ref": "#/definitions/Chat"
      message:
        type: string
      messageId:
        type: integer
        format: int64
      timeSent:
        type: string
        format: date-time
      user:
        "$ref": "#/definitions/UserReq"
    title: MessageReq
  MessageRes:
    type: object
    properties:
      chat:
        "$ref": "#/definitions/Chat"
      message:
        type: string
      messageId:
        type: integer
        format: int64
      timeSent:
        type: string
        format: date-time
      user:
        "$ref": "#/definitions/UserRes"
    title: MessageRes
  ModelAndView:
    type: object
    properties:
      empty:
        type: boolean
      model:
        type: object
      modelMap:
        type: object
        additionalProperties:
          type: object
      reference:
        type: boolean
      status:
        type: string
        enum:
          - ACCEPTED
          - ALREADY_REPORTED
          - BAD_GATEWAY
          - BAD_REQUEST
          - BANDWIDTH_LIMIT_EXCEEDED
          - CHECKPOINT
          - CONFLICT
          - CONTINUE
          - CREATED
          - DESTINATION_LOCKED
          - EXPECTATION_FAILED
          - FAILED_DEPENDENCY
          - FORBIDDEN
          - FOUND
          - GATEWAY_TIMEOUT
          - GONE
          - HTTP_VERSION_NOT_SUPPORTED
          - IM_USED
          - INSUFFICIENT_SPACE_ON_RESOURCE
          - INSUFFICIENT_STORAGE
          - INTERNAL_SERVER_ERROR
          - I_AM_A_TEAPOT
          - LENGTH_REQUIRED
          - LOCKED
          - LOOP_DETECTED
          - METHOD_FAILURE
          - METHOD_NOT_ALLOWED
          - MOVED_PERMANENTLY
          - MOVED_TEMPORARILY
          - MULTIPLE_CHOICES
          - MULTI_STATUS
          - NETWORK_AUTHENTICATION_REQUIRED
          - NON_AUTHORITATIVE_INFORMATION
          - NOT_ACCEPTABLE
          - NOT_EXTENDED
          - NOT_FOUND
          - NOT_IMPLEMENTED
          - NOT_MODIFIED
          - NO_CONTENT
          - OK
          - PARTIAL_CONTENT
          - PAYLOAD_TOO_LARGE
          - PAYMENT_REQUIRED
          - PERMANENT_REDIRECT
          - PRECONDITION_FAILED
          - PRECONDITION_REQUIRED
          - PROCESSING
          - PROXY_AUTHENTICATION_REQUIRED
          - REQUESTED_RANGE_NOT_SATISFIABLE
          - REQUEST_ENTITY_TOO_LARGE
          - REQUEST_HEADER_FIELDS_TOO_LARGE
          - REQUEST_TIMEOUT
          - REQUEST_URI_TOO_LONG
          - RESET_CONTENT
          - SEE_OTHER
          - SERVICE_UNAVAILABLE
          - SWITCHING_PROTOCOLS
          - TEMPORARY_REDIRECT
          - TOO_EARLY
          - TOO_MANY_REQUESTS
          - UNAUTHORIZED
          - UNAVAILABLE_FOR_LEGAL_REASONS
          - UNPROCESSABLE_ENTITY
          - UNSUPPORTED_MEDIA_TYPE
          - UPGRADE_REQUIRED
          - URI_TOO_LONG
          - USE_PROXY
          - VARIANT_ALSO_NEGOTIATES
      view:
        "$ref": "#/definitions/View"
      viewName:
        type: string
    title: ModelAndView
  Report:
    type: object
    properties:
      description:
        type: string
      reportId:
        type: integer
        format: int64
      reportWriter:
        "$ref": "#/definitions/UserRes"
      reportedUser:
        "$ref": "#/definitions/UserRes"
    title: Report
  User:
    type: object
    properties:
      activities:
        type: array
        uniqueItems: true
        items:
          "$ref": "#/definitions/Activity"
      dateOfBirth:
        type: string
        format: date
      email:
        type: string
      faults:
        type: integer
        format: int32
      forename:
        type: string
      hash:
        type: string
      messages:
        type: array
        uniqueItems: true
        items:
          "$ref": "#/definitions/Message"
      organizedActivities:
        type: array
        uniqueItems: true
        items:
          "$ref": "#/definitions/Activity"
      profilePicture:
        "$ref": "#/definitions/BlobRes"
      rating:
        type: integer
        format: int32
      reportsReceived:
        type: array
        uniqueItems: true
        items:
          "$ref": "#/definitions/Report"
      reportsSent:
        type: array
        uniqueItems: true
        items:
          "$ref": "#/definitions/Report"
      role:
        type: string
      salt:
        type: string
      score:
        type: integer
        format: int32
      surname:
        type: string
      userId:
        type: integer
        format: int64
    title: User
  UserDTO:
    type: object
    properties:
      dateOfBirth:
        type: string
        format: date
      email:
        type: string
      forename:
        type: string
      profilePicture:
        "$ref": "#/definitions/BlobRes"
      rating:
        type: integer
        format: int32
      role:
        type: string
      score:
        type: integer
        format: int32
      surname:
        type: string
      userId:
        type: integer
        format: int64
    title: UserDTO
  UserEditDTO:
    type: object
    properties:
      dateOfBirth:
        type: string
        format: date
      email:
        type: string
      forename:
        type: string
      newPassword:
        type: string
      oldPassword:
        type: string
      profilePicture:
        "$ref": "#/definitions/BlobReq"
      surname:
        type: string
    title: UserEditDTO
  UserRegistrationCallbackDTO:
    type: object
    properties:
      token:
        type: string
      user:
        "$ref": "#/definitions/UserDTO"
    title: UserRegistrationCallbackDTO
  UserReq:
    type: object
    properties:
      activities:
        type: array
        uniqueItems: true
        items:
          "$ref": "#/definitions/ActivityReq"
      dateOfBirth:
        type: string
        format: date
      email:
        type: string
      faults:
        type: integer
        format: int32
      forename:
        type: string
      hash:
        type: string
      messages:
        type: array
        uniqueItems: true
        items:
          "$ref": "#/definitions/MessageReq"
      organizedActivities:
        type: array
        uniqueItems: true
        items:
          "$ref": "#/definitions/ActivityReq"
      profilePicture:
        "$ref": "#/definitions/BlobReq"
      rating:
        type: integer
        format: int32
      reportsReceived:
        type: array
        uniqueItems: true
        items:
          "$ref": "#/definitions/Report"
      reportsSent:
        type: array
        uniqueItems: true
        items:
          "$ref": "#/definitions/Report"
      role:
        type: string
      salt:
        type: string
      score:
        type: integer
        format: int32
      surname:
        type: string
      userId:
        type: integer
        format: int64
    title: UserReq
  UserRes:
    type: object
    properties:
      activities:
        type: array
        uniqueItems: true
        items:
          "$ref": "#/definitions/ActivityRes"
      dateOfBirth:
        type: string
        format: date
      email:
        type: string
      faults:
        type: integer
        format: int32
      forename:
        type: string
      hash:
        type: string
      messages:
        type: array
        uniqueItems: true
        items:
          "$ref": "#/definitions/MessageRes"
      organizedActivities:
        type: array
        uniqueItems: true
        items:
          "$ref": "#/definitions/ActivityRes"
      profilePicture:
        "$ref": "#/definitions/BlobRes"
      rating:
        type: integer
        format: int32
      reportsReceived:
        type: array
        uniqueItems: true
        items:
          "$ref": "#/definitions/Report"
      reportsSent:
        type: array
        uniqueItems: true
        items:
          "$ref": "#/definitions/Report"
      role:
        type: string
      salt:
        type: string
      score:
        type: integer
        format: int32
      surname:
        type: string
      userId:
        type: integer
        format: int64
    title: UserRes
  UserWithPasswordDTO:
    type: object
    properties:
      dateOfBirth:
        type: string
        format: date
      email:
        type: string
      forename:
        type: string
      password:
        type: string
      profilePicture:
        "$ref": "#/definitions/BlobReq"
      surname:
        type: string
    title: UserWithPasswordDTO
  View:
    type: object
    properties:
      contentType:
        type: string
    title: View
